Adopt LC mut_strategy!
select layer: block3.sep_conv2.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 38, 38] out_shape: [2, 728, 38, 38]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=728, output_channels=728, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=728, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbb302210>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
1 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.0.residual_conv layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbb302690>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
2 generation!

Adopt LD mut_strategy!
delete layer_name:block4.residual_bn
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
3 generation!

Adopt SM mut_strategy!
select layer: block1.sep_conv1.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 64, 149, 149] out_shape: [2, 128, 149, 149]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 4]
mut_result:True
4 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: block2.sep_conv2.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 75, 75] out_shape: [2, 256, 75, 75]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.9, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
5 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.6.bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
6 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: block4.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 1024, 19, 19] out_shape: [2, 1024, 19, 19]
mut Basic type: True
select insert layer: Dense<input_channels=1024, output_channels=1024>
Illegal CM mutate!
For 'MatMul', the type of 'x2' should be same as 'x1', but got 'x1' with type Tensor[Float16] and 'x2' with type Tensor[Float32].

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/ops/mat_mul.cc:143 InferType

mut_result:CM Create illegal layer!
7 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.6.residual_conv
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
8 generation!

Adopt SM mut_strategy!
select layer: block3.sep_conv1.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 38, 38] out_shape: [2, 256, 38, 38]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 18, 38]
mutate output_shape: [2, 6, 9, 14]
mut_result:True
9 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.6.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: ELU<>
insert_layer_outshape equal!
mut_result:True
10 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.7.sep_conv3.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Mish<>
insert_layer_outshape equal!
mut_result:True
11 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.0.residual_bn layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: dwpw_group<
  (depthwise): dwpw_basic<
    (dwpw_conv): Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=728, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbaadb2d0>, bias_init=None, format=NCHW>
    (dwpw_bn): BatchNorm2d<num_features=728, eps=1e-05, momentum=0.9, gamma=Parameter (name=depthwise.dwpw_bn.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=depthwise.dwpw_bn.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=depthwise.dwpw_bn.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=depthwise.dwpw_bn.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
    (dwpw_activation): Sigmoid<>
    >
  (pointwise): dwpw_basic<
    (dwpw_conv): Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbaadbd50>, bias_init=None, format=NCHW>
    (dwpw_bn): BatchNorm2d<num_features=728, eps=1e-05, momentum=0.9, gamma=Parameter (name=pointwise.dwpw_bn.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=pointwise.dwpw_bn.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=pointwise.dwpw_bn.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=pointwise.dwpw_bn.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
    (dwpw_activation): Sigmoid<>
    >
  >
insert_layer_outshape equal!
mut_result:True
12 generation!

Adopt LC mut_strategy!
select layer: block4.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 1024, 19, 19] out_shape: [2, 1024, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=1024, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(1024,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
13 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.1.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: ELU<>
replace Basic with CM op!
mut_result:True
14 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.4.sep_conv3.depthwise
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
15 generation!

Adopt LD mut_strategy!
delete layer_name:block1.sep_conv1.depthwise
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
16 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.1.residual_conv layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=728, output_channels=182, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbaafa410>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=182, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(182,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(182,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(182,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(182,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=182, output_channels=182, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d8816ec50>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=182, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(182,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(182,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(182,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(182,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=182, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d24052590>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=728, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d881eaf10>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=728, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:True
17 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.1.sep_conv1.pointwise
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
18 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:0
select layer: block2.sep_conv2.depthwise layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 256, 75, 75] out_shape: [2, 256, 75, 75]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: LeakyReLU<>
mut_result:True
19 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.5.sep_conv3.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:False
20 generation!

Adopt PM mut_strategy!
The target model do not have the mutator operators keep_prob!
mut_result:Parameter Miss
21 generation!

Adopt LD mut_strategy!
delete layer_name:block4.sep_conv3.pointwise
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
22 generation!

Adopt LD mut_strategy!
delete layer_name:block1.bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
23 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.4.sep_conv1.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d9805c210>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
24 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.2.sep_conv2.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: ELU<>
insert_layer_outshape equal!
mut_result:True
25 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.7.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 728, 19, 19]
mut_result:True
26 generation!

Adopt SM mut_strategy!
select layer: mid_blocks.6.sep_conv2.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 49, 8]
mut_result:True
27 generation!

Adopt LC mut_strategy!
select layer: block4.sep_conv2.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 1024, 19, 19] out_shape: [2, 1024, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=1024, output_channels=1024, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbaa96810>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
28 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.6.bn2 layer_type: <class 'mindspore.nn.layer.activation.ELU'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
replace Basic with CM op!
mut_result:True
29 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.5.sep_conv3.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: Conv2dTranspose<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d640b5590>, bias_init=None, format=NCHW>
replace Basic with CM op!
mut_result:True
30 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:1
select layer: mid_blocks.4.sep_conv1.pointwise layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
replace Basic with Cascade!
mut_result:False
31 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.3.sep_conv1.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d882520d0>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=728, eps=1e-05, momentum=0.9, gamma=Parameter (name=downsample_bn.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=downsample_bn.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=downsample_bn.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=downsample_bn.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:True
32 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.4.residual_conv
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
33 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.0.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=728, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(728,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
34 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.6.bn2
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
35 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: mid_blocks.6.sep_conv1.depthwise layer_type: Conv2d selected param:in_channels input_shape:[2, 728, 19, 19] output_shape:[2, 728, 19, 19]
Edit value: 2912 new_inshape: (2, 2912, 19, 19) new_outshape: (2, 728, 19, 19)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): Conv2d<input_channels=2912, output_channels=728, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=728, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d88177d50>, bias_init=None, format=NCHW>
  >
mut_result:True
36 generation!

Adopt CM mut_strategy!
mut_result:No suitable ops for CM mutation!
37 generation!

Adopt SM mut_strategy!
select layer: block4.residual_conv layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 1024, 10, 10]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 4, 4, 36]
mutate output_shape: [2, 24, 21, 2]
mut_result:True
38 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.1.sep_conv2.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d880c88d0>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
39 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.3.sep_conv2.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=728, output_channels=728, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=728, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbab8db90>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
40 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.7.maxpool
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
41 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:0
select layer: mid_blocks.0.residual_bn layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: ReLU<>
mut_result:True
42 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.5.sep_conv2.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: Sigmoid<>
replace Basic with CM op!
mut_result:True
43 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.2.maxpool layer_type: <class 'mindspore.nn.layer.pooling.MaxPool2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: AvgPool2d<kernel_size=1, stride=1, pad_mode=VALID>
replace Basic with CM op!
mut_result:True
44 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.1.residual_conv
candidate_in_mutlayers_indice:1
mut_result:True
45 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.2.sep_conv1.depthwise
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
46 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.1.sep_conv3.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=728, output_channels=728, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=728, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbb25b610>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
47 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.5.sep_conv2.pointwise
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
48 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: sep_conv_last2.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 1536, 10, 10] out_shape: [2, 2048, 10, 10]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: ReLU<>
insert_layer_outshape not equal!: [2, 2048, 10, 10]
mut_result:True
49 generation!

Adopt LC mut_strategy!
select layer: block4.sep_conv2.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 1024, 19, 19] out_shape: [2, 1024, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=1024, output_channels=1024, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1024, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d641ba790>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
50 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:1
select layer: mid_blocks.3.sep_conv1.pointwise layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d640b7410>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=728, eps=1e-05, momentum=0.9, gamma=Parameter (name=downsample_bn.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=downsample_bn.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=downsample_bn.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=downsample_bn.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
  >
insert_layer_outshape equal!
mut_result:True
51 generation!

Adopt SM mut_strategy!
select layer: mid_blocks.6.sep_conv3.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 25]
mut_result:True
52 generation!

Adopt SM mut_strategy!
select layer: mid_blocks.6.residual_bn layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 5, 5, 45]
mut_result:True
53 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.5.residual_conv layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbab0e0d0>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
54 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:1
select layer: mid_blocks.0.residual_conv layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
replace Basic with Cascade!
mut_result:False
55 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.7.residual_bn layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: LeakyReLU<>
replace Basic with CM op!
mut_result:True
56 generation!

Adopt SM mut_strategy!
select layer: mid_blocks.5.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 31, 43, 36, 10]
mut_result:True
57 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.2.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:False
58 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: sep_conv_last2.depthwise layer_type: Conv2d selected param:out_channels input_shape:[2, 1536, 10, 10] output_shape:[2, 1536, 10, 10]
Edit value: 6144 new_inshape: (2, 1536, 10, 10) new_outshape: (2, 6144, 10, 10)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=1536, output_channels=6144, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1536, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d881f0210>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
59 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.1.residual_bn layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: convbnrelu<
  (conbnrelu_conv): Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d881f0950>, bias_init=None, format=NCHW>
  (conbnrelu_bn): BatchNorm2d<num_features=728, eps=1e-05, momentum=0.9, gamma=Parameter (name=1.conbnrelu_bn.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=1.conbnrelu_bn.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=1.conbnrelu_bn.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=1.conbnrelu_bn.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
  (conbnrelu_relu): ReLU<>
  >
replace Basic with CM op!
mut_result:True
60 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.5.sep_conv3.depthwise layer_type: <class 'common.mutation_ms.Layer_utils.CM_branchCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Sigmoid<>
insert_layer_outshape equal!
mut_result:True
61 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: block1.sep_conv3.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 149, 149] out_shape: [2, 128, 149, 149]
mut Basic type: True
select insert layer: Conv2dTranspose<input_channels=128, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d086d3b50>, bias_init=None, format=NCHW>
replace Basic with CM op!
mut_result:True
62 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.2.residual_bn layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: AvgPool2d<kernel_size=1, stride=1, pad_mode=VALID>
replace Basic with CM op!
mut_result:True
63 generation!

Adopt PM mut_strategy!
The target model do not have the mutator operators keep_prob!
mut_result:Parameter Miss
64 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: block1.residual_conv layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 64, 149, 149] out_shape: [2, 128, 75, 75]
mut Basic type: True
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
replace Basic with CM op!
mut_result:True
65 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.2.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: MaxPool2d<kernel_size=1, stride=1, pad_mode=VALID>
replace Basic with CM op!
mut_result:True
66 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: mid_blocks.0.sep_conv1.pointwise layer_type: Conv2d selected param:out_channels input_shape:[2, 728, 19, 19] output_shape:[2, 728, 19, 19]
Edit value: 2912 new_inshape: (2, 728, 19, 19) new_outshape: (2, 2912, 19, 19)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=728, output_channels=2912, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d881285d0>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
67 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.7.sep_conv2.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=728, output_channels=728, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=728, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8dbaedd9d0>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
68 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: block1.sep_conv2.depthwise layer_type: Conv2d selected param:out_channels input_shape:[2, 128, 149, 149] output_shape:[2, 128, 149, 149]
Edit value: 256 new_inshape: (2, 128, 149, 149) new_outshape: (2, 256, 149, 149)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=128, output_channels=256, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=128, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d1058a190>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
69 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: block3.sep_conv1.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 38, 38] out_shape: [2, 728, 38, 38]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d1074c6d0>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=728, eps=1e-05, momentum=0.9, gamma=Parameter (name=downsample_bn.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=downsample_bn.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=downsample_bn.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=downsample_bn.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:True
70 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:2
select layer: mid_blocks.5.bn2 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
mut_result:False
71 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.6.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: dwpw_group<
  (depthwise): dwpw_basic<
    (dwpw_conv): Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=728, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d24384790>, bias_init=None, format=NCHW>
    (dwpw_bn): BatchNorm2d<num_features=728, eps=1e-05, momentum=0.9, gamma=Parameter (name=1.depthwise.dwpw_bn.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=1.depthwise.dwpw_bn.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=1.depthwise.dwpw_bn.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=1.depthwise.dwpw_bn.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
    (dwpw_activation): ReLU6<>
    >
  (pointwise): dwpw_basic<
    (dwpw_conv): Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d24384810>, bias_init=None, format=NCHW>
    (dwpw_bn): BatchNorm2d<num_features=728, eps=1e-05, momentum=0.9, gamma=Parameter (name=1.pointwise.dwpw_bn.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=1.pointwise.dwpw_bn.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=1.pointwise.dwpw_bn.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=1.pointwise.dwpw_bn.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
    (dwpw_activation): ReLU6<>
    >
  >
replace Basic with CM op!
mut_result:True
72 generation!

Adopt LD mut_strategy!
delete layer_name:block3.residual_conv
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
73 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.0.sep_conv2.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=728, output_channels=728, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d24126490>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
74 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 2048, 10, 10] out_shape: [2, 2048, 10, 10]
mut Basic type: True
select insert layer: ReLU<>
replace Basic with CM op!
mut_result:True
75 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: mid_blocks.5.sep_conv2.depthwise layer_type: Conv2d selected param:out_channels input_shape:[2, 728, 19, 19] output_shape:[2, 728, 19, 19]
Edit value: 1456 new_inshape: (2, 728, 19, 19) new_outshape: (2, 1456, 19, 19)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=728, output_channels=1456, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=728, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d08534f10>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
76 generation!

Adopt SM mut_strategy!
select layer: fc layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 2048] out_shape: [2, 1000]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 49, 37, 1]
mutate output_shape: [2, 9, 25]
mut_result:True
77 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:0
select layer: block4.bn3 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 1024, 19, 19] out_shape: [2, 1024, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: dwpw_group<
  (depthwise): dwpw_basic<
    (dwpw_conv): Conv2d<input_channels=1024, output_channels=1024, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1024, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d243b5750>, bias_init=None, format=NCHW>
    (dwpw_bn): BatchNorm2d<num_features=1024, eps=1e-05, momentum=0.9, gamma=Parameter (name=depthwise.dwpw_bn.gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=depthwise.dwpw_bn.beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=depthwise.dwpw_bn.moving_mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=depthwise.dwpw_bn.moving_variance, shape=(1024,), dtype=Float32, requires_grad=False)>
    (dwpw_activation): ELU<>
    >
  (pointwise): dwpw_basic<
    (dwpw_conv): Conv2d<input_channels=1024, output_channels=1024, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d8847bf50>, bias_init=None, format=NCHW>
    (dwpw_bn): BatchNorm2d<num_features=1024, eps=1e-05, momentum=0.9, gamma=Parameter (name=pointwise.dwpw_bn.gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=pointwise.dwpw_bn.beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=pointwise.dwpw_bn.moving_mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=pointwise.dwpw_bn.moving_variance, shape=(1024,), dtype=Float32, requires_grad=False)>
    (dwpw_activation): ELU<>
    >
  >
insert_layer_outshape equal!
mut_result:True
78 generation!

Adopt SM mut_strategy!
select layer: mid_blocks.0.sep_conv2.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 25, 38, 5, 29]
mutate output_shape: [2, 25]
mut_result:True
79 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:0
select layer: mid_blocks.7.sep_conv3.pointwise layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Softmax<>
mut_result:True
80 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.4.sep_conv3.pointwise
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
81 generation!

Adopt PM mut_strategy!
The target model do not have the mutator operators keep_prob!
mut_result:Parameter Miss
82 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:1
select layer: mid_blocks.5.residual_conv layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: LeakyReLU<>
mut_result:True
83 generation!

Adopt RA mut_strategy!
mut_result:No suitable ops for RA mutation!
84 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: mid_blocks.5.bn1 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 728, 19, 19] output_shape:[2, 728, 19, 19]
Edit value: 0.3999999999999999 new_inshape: (2, 728, 19, 19) new_outshape: (2, 728, 19, 19)
BatchNorm2d<num_features=728, eps=1e-05, momentum=0.3999999999999999, gamma=Parameter (name=bn1.gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn1.beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn1.moving_mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn1.moving_variance, shape=(728,), dtype=Float32, requires_grad=False)>
mut_result:True
85 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:2
select layer: block3.sep_conv1.pointwise layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 256, 38, 38] out_shape: [2, 728, 38, 38]
mut Basic type: True
select insert layer: Sigmoid<>
mut_result:True
86 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.7.bn3
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
87 generation!

Adopt SM mut_strategy!
select layer: mid_blocks.2.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 20]
mutate output_shape: [2, 45, 42, 2]
mut_result:True
88 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.4.sep_conv2.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: ELU<>
insert_layer_outshape equal!
mut_result:True
89 generation!

Adopt CM mut_strategy!
mut_result:No suitable ops for CM mutation!
90 generation!

Adopt LC mut_strategy!
select layer: block4.sep_conv1.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 1024, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=1024, output_channels=1024, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8d1065b210>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
91 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: block4.sep_conv1.depthwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: ReLU6<>
replace Basic with CM op!
mut_result:True
92 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.5.residual_bn layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=728, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(728,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
93 generation!

Adopt SM mut_strategy!
select layer: mid_blocks.2.maxpool layer_type: <class 'common.mutation_ms.Layer_utils.CM_branchCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 48, 1]
mut_result:True
94 generation!

Adopt LD mut_strategy!
delete layer_name:mid_blocks.3.maxpool
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
95 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.3.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
replace Basic with CM op!
mut_result:True
96 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: mid_blocks.3.bn1 layer_type: <class 'common.mutation_ms.Layer_utils.CM_branchCell'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
insert_layer_outshape not equal!: [2, 728, 19, 19]
mut_result:True
97 generation!

Adopt SM mut_strategy!
select layer: mid_blocks.7.sep_conv1.pointwise layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 6, 22]
mutate output_shape: [2, 24, 11, 2, 33]
mut_result:True
98 generation!

Adopt LC mut_strategy!
select layer: block4.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 1024, 19, 19] out_shape: [2, 1024, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=1024, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(1024,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
99 generation!

Adopt LC mut_strategy!
select layer: mid_blocks.4.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 728, 19, 19] out_shape: [2, 728, 19, 19]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=728, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(728,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(728,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(728,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(728,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
100 generation!

mutation trace: {'1': [1], '2': [1, 2], '3': [1, 2, 3], '4': [1, 2, 3, 4], '5': [1, 2, 3, 4, 5], '6': [1, 2, 3, 4, 5, 6], '7': [1, 2, 3, 4, 5, 6, 7], '8': [1, 2, 3, 4, 5, 6, 7, 8], '9': [1, 2, 3, 4, 5, 6, 7, 8, 9], '10': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], '11': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], '12': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], '13': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], '14': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], '15': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], '16': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], '17': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], '18': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], '19': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], '20': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], '21': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], '22': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], '23': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], '24': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], '25': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], '26': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], '27': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], '28': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], '29': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], '30': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], '31': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], '32': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], '33': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], '34': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], '35': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], '36': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], '37': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], '38': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], '39': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], '40': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], '41': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], '42': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], '43': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], '44': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], '45': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], '46': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], '47': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], '48': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], '49': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], '50': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], '51': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], '52': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], '53': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], '54': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], '55': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], '56': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], '57': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], '58': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], '59': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], '60': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], '61': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], '62': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], '63': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], '64': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], '65': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], '66': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], '67': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], '68': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], '69': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], '70': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], '71': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], '72': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], '73': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], '74': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], '75': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], '76': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], '77': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], '78': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], '79': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], '80': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], '81': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], '82': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], '83': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], '84': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], '85': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], '86': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], '87': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], '88': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], '89': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], '90': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], '91': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], '92': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], '93': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], '94': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], '95': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], '96': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], '97': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], '98': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], '99': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], '100': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]}
