Adopt LC mut_strategy!
select layer: layer3.1.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
1 generation!

Adopt SM mut_strategy!
select layer: layer3.4.conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 47, 23, 16, 16]
mut_result:True
2 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer3.4.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 1024, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: AvgPool2d<kernel_size=1, stride=1, pad_mode=VALID>
insert_layer_outshape equal!
mut_result:True
3 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer4.1.conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 512, 7, 7] out_shape: [2, 2048, 7, 7]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:False
4 generation!

Adopt LC mut_strategy!
select layer: layer3.2.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 1024, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=1024, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(1024,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
5 generation!

Adopt LD mut_strategy!
delete layer_name:layer4.2.bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
6 generation!

Adopt LD mut_strategy!
delete layer_name:conv1
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
7 generation!

Adopt SM mut_strategy!
select layer: layer1.2.relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 256, 56, 56] out_shape: [2, 256, 56, 56]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 45, 30, 18]
mutate output_shape: [2, 10]
mut_result:True
8 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.3.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 512, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
select insert layer: Dropout<keep_prob=0.5>
replace Basic with CM op!
mut_result:True
9 generation!

Adopt SM mut_strategy!
select layer: layer3.4.relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 1024, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 49, 38, 31]
mut_result:True
10 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer3.5.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: ReLU6<>
insert_layer_outshape equal!
mut_result:True
11 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer2.0.bn2 layer_type: BatchNorm2d selected param:eps input_shape:[2, 128, 28, 28] output_shape:[2, 128, 28, 28]
Edit value: 3.0000000000000004e-05 new_inshape: (2, 128, 28, 28) new_outshape: (2, 128, 28, 28)
BatchNorm2d<num_features=128, eps=3.0000000000000004e-05, momentum=0.09999999999999998, gamma=Parameter (name=bn2.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn2.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn2.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn2.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
mut_result:True
12 generation!

Adopt LC mut_strategy!
select layer: layer3.4.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=256, output_channels=256, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8238f018d0>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
13 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.0.downsample.1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 512, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
select insert layer: Mish<>
Failed to set layer: layer2.0.downsample.1!
list index out of range
mut_result:CM set layers failure!
14 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.2.conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
select insert layer: Softmax<>
replace Basic with CM op!
mut_result:True
15 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer4.2.conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 512, 7, 7] out_shape: [2, 2048, 7, 7]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:False
16 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer4.1.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 512, 7, 7] out_shape: [2, 512, 7, 7]
mut Basic type: True
select insert layer: GELU<>
replace Basic with CM op!
mut_result:True
17 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.0.relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 512, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2dTranspose<input_channels=512, output_channels=512, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f82387bc110>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
18 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer2.3.bn2 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 128, 28, 28] output_shape:[2, 128, 28, 28]
Edit value: 0.29999999999999993 new_inshape: (2, 128, 28, 28) new_outshape: (2, 128, 28, 28)
BatchNorm2d<num_features=128, eps=1e-05, momentum=0.29999999999999993, gamma=Parameter (name=bn2.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn2.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn2.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn2.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
mut_result:True
19 generation!

Adopt LC mut_strategy!
select layer: layer1.2.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 64, 56, 56] out_shape: [2, 64, 56, 56]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=64, output_channels=64, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81ac6b2f10>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
20 generation!

Adopt SM mut_strategy!
select layer: layer3.3.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 23]
mutate output_shape: [2, 34, 38]
mut_result:True
21 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.2.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
select insert layer: AvgPool2d<kernel_size=1, stride=1, pad_mode=VALID>
replace Basic with CM op!
mut_result:True
22 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer1.0.downsample.0 layer_type: Conv2d selected param:out_channels input_shape:[2, 64, 56, 56] output_shape:[2, 256, 56, 56]
Edit value: 128 new_inshape: (2, 64, 56, 56) new_outshape: (2, 128, 56, 56)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=64, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8238673250>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
23 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer3.1.conv3 layer_type: Conv2d selected param:out_channels input_shape:[2, 256, 14, 14] output_shape:[2, 1024, 14, 14]
Edit value: 512 new_inshape: (2, 256, 14, 14) new_outshape: (2, 512, 14, 14)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=256, output_channels=512, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f82382d0750>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
24 generation!

Adopt LD mut_strategy!
delete layer_name:layer4.2.conv1
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
25 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer4.0.downsample.0 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 1024, 14, 14] out_shape: [2, 2048, 7, 7]
mut Basic type: True
select insert layer: Softmax<>
replace Basic with CM op!
mut_result:True
26 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer1.1.conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 64, 56, 56] out_shape: [2, 256, 56, 56]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 256, 56, 56]
mut_result:True
27 generation!

Adopt PM mut_strategy!
The target model do not have the mutator operators keep_prob!
mut_result:Parameter Miss
28 generation!

Adopt SM mut_strategy!
select layer: layer3.0.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 1024, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 15, 46]
mutate output_shape: [2, 41, 38]
mut_result:True
29 generation!

Adopt LC mut_strategy!
select layer: layer2.1.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=128, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(128,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
30 generation!

Adopt CM mut_strategy!
mut_result:No suitable ops for CM mutation!
31 generation!

Adopt LD mut_strategy!
delete layer_name:layer4.1.bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
32 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer1.1.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 64, 56, 56] out_shape: [2, 64, 56, 56]
mut Basic type: True
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
replace Basic with CM op!
mut_result:True
33 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer1.0.relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 256, 56, 56] out_shape: [2, 256, 56, 56]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81ac697610>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
34 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer2.3.conv2 layer_type: Conv2d selected param:in_channels input_shape:[2, 128, 28, 28] output_shape:[2, 128, 28, 28]
Edit value: 256 new_inshape: (2, 256, 28, 28) new_outshape: (2, 128, 28, 28)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): Conv2d<input_channels=256, output_channels=128, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8238241e90>, bias_init=None, format=NCHW>
  >
mut_result:True
35 generation!

Adopt LD mut_strategy!
delete layer_name:layer1.0.downsample.0
mut_result:No suitable ops for LD mutation!
36 generation!

Adopt SM mut_strategy!
select layer: layer2.1.conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 14]
mut_result:True
37 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer3.2.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
select insert layer: Softmax<>
replace Basic with CM op!
mut_result:True
38 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer4.1.relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 2048, 7, 7] out_shape: [2, 2048, 7, 7]
mut Basic type: True
select insert layer: Dropout<keep_prob=0.5>
replace Basic with CM op!
mut_result:True
39 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer3.3.conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Softmax<>
insert_layer_outshape equal!
mut_result:True
40 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.3.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 512, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
select insert layer: GELU<>
replace Basic with CM op!
mut_result:True
41 generation!

Adopt SM mut_strategy!
select layer: layer2.1.bn1 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
candidate_in_mutlayers_indice:0
mutate state: before
mutate input_shape: [2, 41, 19, 2, 49]
mut_result:True
42 generation!

Adopt LD mut_strategy!
delete layer_name:layer3.5.bn3
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
43 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer4.1.conv1 layer_type: Conv2d selected param:in_channels input_shape:[2, 2048, 7, 7] output_shape:[2, 512, 7, 7]
Edit value: 512 new_inshape: (2, 512, 7, 7) new_outshape: (2, 512, 7, 7)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): Conv2d<input_channels=512, output_channels=512, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81a816fed0>, bias_init=None, format=NCHW>
  >
mut_result:True
44 generation!

Adopt LD mut_strategy!
delete layer_name:layer3.2.conv2
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
45 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer4.0.downsample.1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 2048, 7, 7] out_shape: [2, 2048, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: GELU<>
insert_layer_outshape equal!
mut_result:True
46 generation!

Adopt LC mut_strategy!
select layer: layer3.5.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
47 generation!

Adopt LD mut_strategy!
delete layer_name:layer1.2.conv1
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
48 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer4.2.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 2048, 7, 7] out_shape: [2, 2048, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: ReLU<>
insert_layer_outshape equal!
mut_result:True
49 generation!

Adopt LD mut_strategy!
delete layer_name:layer1.0.bn2
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
50 generation!

Adopt SM mut_strategy!
select layer: layer3.3.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 1024, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 15, 31]
mut_result:True
51 generation!

Adopt SM mut_strategy!
select layer: layer2.0.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 35, 49, 16, 48]
mutate output_shape: [2, 43, 40, 15, 11]
mut_result:True
52 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer3.5.conv1 layer_type: Conv2d selected param:stride input_shape:[2, 1024, 14, 14] output_shape:[2, 256, 14, 14]
Edit value: (2, 4) new_inshape: (2, 1024, 14, 14) new_outshape: (2, 256, 7, 4)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=1024, output_channels=256, kernel_size=(1, 1), stride=(2, 4), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8180317510>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
53 generation!

Adopt CM mut_strategy!
mut_result:No suitable ops for CM mutation!
54 generation!

Adopt LD mut_strategy!
delete layer_name:layer1.1.conv3
mut_result:No suitable ops for LD mutation!
55 generation!

Adopt LC mut_strategy!
select layer: layer2.2.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 512, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=512, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(512,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(512,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(512,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(512,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
56 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer3.1.relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 1024, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=1024, output_channels=1024, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81a8092150>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=1024, eps=1e-05, momentum=0.9, gamma=Parameter (name=downsample_bn.gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=downsample_bn.beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=downsample_bn.moving_mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=downsample_bn.moving_variance, shape=(1024,), dtype=Float32, requires_grad=False)>
  >
insert_layer_outshape equal!
mut_result:True
57 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer4.0.conv2 layer_type: Conv2d selected param:in_channels input_shape:[2, 512, 14, 14] output_shape:[2, 512, 7, 7]
Edit value: 128 new_inshape: (2, 128, 14, 14) new_outshape: (2, 512, 7, 7)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): Conv2d<input_channels=128, output_channels=512, kernel_size=(3, 3), stride=(2, 2), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81ac637ed0>, bias_init=None, format=NCHW>
  >
mut_result:True
58 generation!

Adopt CM mut_strategy!
mut_result:No suitable ops for CM mutation!
59 generation!

Adopt LC mut_strategy!
select layer: layer3.0.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 28, 28] out_shape: [2, 256, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
60 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.0.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 56, 56] out_shape: [2, 128, 56, 56]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=256, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81787767d0>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=128, eps=1e-05, momentum=0.9, gamma=Parameter (name=downsample_bn.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=downsample_bn.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=downsample_bn.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=downsample_bn.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  >
insert_layer_outshape equal!
mut_result:True
61 generation!

Adopt LD mut_strategy!
delete layer_name:layer1.0.downsample.1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
62 generation!

Adopt LC mut_strategy!
select layer: layer2.3.conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=512, output_channels=512, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8178342d10>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
63 generation!

Adopt SM mut_strategy!
select layer: relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 64, 112, 112] out_shape: [2, 64, 112, 112]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 36, 24]
mutate output_shape: [2, 21]
mut_result:True
64 generation!

Adopt LD mut_strategy!
delete layer_name:layer1.2.conv3
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
65 generation!

Adopt LC mut_strategy!
select layer: layer4.1.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 512, 7, 7] out_shape: [2, 512, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=512, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(512,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(512,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(512,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(512,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
66 generation!

Adopt PM mut_strategy!
The target model do not have the mutator operators keep_prob!
mut_result:Parameter Miss
67 generation!

Adopt LD mut_strategy!
delete layer_name:layer4.0.conv3
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
68 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:1
select layer: layer3.1.bn1 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 256, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
replace Basic with Cascade!
mut_result:False
69 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.1.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=128, output_channels=32, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8188194a10>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=32, output_channels=32, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81ac72c190>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=32, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f82386d7cd0>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=128, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=128, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8188194610>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=128, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:True
70 generation!

Adopt LD mut_strategy!
delete layer_name:layer4.0.bn3
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
71 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:0
select layer: layer3.2.bn3 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 1024, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
mut_result:False
72 generation!

Adopt SM mut_strategy!
select layer: layer2.0.conv1 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 256, 56, 56] out_shape: [2, 128, 56, 56]
mut Basic type: True
candidate_in_mutlayers_indice:1
mutate state: before
mutate input_shape: [2, 21, 6]
mut_result:True
73 generation!

Adopt SM mut_strategy!
select layer: layer4.2.relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 2048, 7, 7] out_shape: [2, 2048, 7, 7]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 26]
mut_result:True
74 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer3.5.relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 1024, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: convbnrelu<
  (conbnrelu_conv): Conv2d<input_channels=1024, output_channels=1024, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8180374690>, bias_init=None, format=NCHW>
  (conbnrelu_bn): BatchNorm2d<num_features=1024, eps=1e-05, momentum=0.9, gamma=Parameter (name=conbnrelu_bn.gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=conbnrelu_bn.beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=conbnrelu_bn.moving_mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=conbnrelu_bn.moving_variance, shape=(1024,), dtype=Float32, requires_grad=False)>
  (conbnrelu_relu): ReLU<>
  >
insert_layer_outshape equal!
mut_result:True
75 generation!

Adopt SM mut_strategy!
select layer: layer1.1.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 64, 56, 56] out_shape: [2, 64, 56, 56]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 38, 10, 27, 44]
mutate output_shape: [2, 13, 20, 49, 5]
mut_result:True
76 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer4.2.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 512, 7, 7] out_shape: [2, 512, 7, 7]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=512, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81ac78d9d0>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=128, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=128, output_channels=128, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f818805a4d0>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=128, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=128, output_channels=512, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81884c1f50>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=512, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(512,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(512,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(512,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(512,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=512, output_channels=512, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81ac5cccd0>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=512, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(512,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(512,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(512,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(512,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:True
77 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer3.4.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 1024, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
select insert layer: ReLU<>
replace Basic with CM op!
mut_result:True
78 generation!

Adopt LC mut_strategy!
select layer: layer3.3.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 1024, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f817849d8d0>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
79 generation!

Adopt SM mut_strategy!
select layer: layer3.5.conv2 layer_type: <class 'mindspore.nn.layer.activation.ReLU6'> in_shape: [2, 256, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 5, 18, 28, 1]
mut_result:True
80 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:1
select op: layer2.0.relu layer_type: Conv2dTranspose selected param:stride input_shape:[2, 512, 28, 28] output_shape:[2, 512, 28, 28]
Edit value: (2, 3) new_inshape: (2, 512, 28, 28) new_outshape: (2, 512, 56, 84)
mutate op infor:
SequentialCell<
  (0): Conv2dTranspose<input_channels=512, output_channels=512, kernel_size=(1, 1), stride=(2, 3), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f81fc0b0710>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
81 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer3.2.conv3 layer_type: Conv2d selected param:in_channels input_shape:[2, 256, 14, 14] output_shape:[2, 1024, 14, 14]
Edit value: 64 new_inshape: (2, 64, 14, 14) new_outshape: (2, 1024, 14, 14)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): Conv2d<input_channels=64, output_channels=1024, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f8188063810>, bias_init=None, format=NCHW>
  >
mut_result:True
82 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer3.2.bn2 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 256, 14, 14] output_shape:[2, 256, 14, 14]
Edit value: 0.3999999999999999 new_inshape: (2, 256, 14, 14) new_outshape: (2, 256, 14, 14)
BatchNorm2d<num_features=256, eps=1e-05, momentum=0.3999999999999999, gamma=Parameter (name=bn2.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn2.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn2.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn2.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
mut_result:True
83 generation!

Adopt SM mut_strategy!
select layer: layer4.0.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 512, 14, 14] out_shape: [2, 512, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 5, 5, 47]
mutate output_shape: [2, 21]
mut_result:True
84 generation!

Adopt LD mut_strategy!
delete layer_name:layer4.2.bn3
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
85 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.1.relu layer_type: <class 'mindspore.nn.layer.activation.ReLU'> in_shape: [2, 512, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Dense<input_channels=512, output_channels=512, has_bias=True>
Illegal RA mutate!
For 'MatMul', the type of 'x2' should be same as 'x1', but got 'x1' with type Tensor[Float16] and 'x2' with type Tensor[Float32].

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/ops/mat_mul.cc:143 InferType

mut_result:RA Create illegal layer!
86 generation!

Adopt SM mut_strategy!
select layer: layer1.2.conv2 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 64, 56, 56] out_shape: [2, 64, 56, 56]
mut Basic type: True
candidate_in_mutlayers_indice:0
mutate state: before
mutate input_shape: [2, 30]
mut_result:True
87 generation!

Adopt LD mut_strategy!
delete layer_name:layer2.2.bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
88 generation!

Adopt SM mut_strategy!
select layer: layer3.5.conv1 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 1024, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
mut_result:No suitable ops for SM mutation!
89 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:1
select layer: layer3.2.bn3 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 1024, 14, 14] out_shape: [2, 1024, 14, 14]
mut Basic type: True
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
mut_result:True
90 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer2.0.conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: GELU<>
insert_layer_outshape not equal!: [2, 512, 28, 28]
mut_result:True
91 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: layer2.2.conv2 layer_type: Conv2d selected param:group input_shape:[2, 128, 28, 28] output_shape:[2, 128, 28, 28]
Edit value: 2 new_inshape: (2, 128, 28, 28) new_outshape: (2, 128, 28, 28)
Conv2d<input_channels=128, output_channels=128, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=2, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f823878c7d0>, bias_init=None, format=NCHW>
mut_result:True
92 generation!

Adopt LC mut_strategy!
select layer: layer1.1.bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 56, 56] out_shape: [2, 256, 56, 56]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
93 generation!

Adopt SM mut_strategy!
select layer: layer4.0.downsample.1 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 2048, 7, 7] out_shape: [2, 2048, 7, 7]
mut Basic type: True
candidate_in_mutlayers_indice:0
mutate state: after
mutate output_shape: [2, 6, 35, 17, 46]
mut_result:True
94 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:1
select layer: layer1.0.relu layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 256, 56, 56] out_shape: [2, 256, 56, 56]
mut Basic type: True
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.9, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
mut_result:True
95 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer1.1.conv2 layer_type: <class 'common.mutation_ms.Layer_utils.CM_branchCell'> in_shape: [2, 64, 56, 56] out_shape: [2, 64, 56, 56]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: ReLU6<>
insert_layer_outshape equal!
mut_result:True
96 generation!

Adopt LC mut_strategy!
select layer: layer3.1.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 1024, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f818036ec10>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
97 generation!

Adopt SM mut_strategy!
select layer: layer1.2.conv2 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 64, 56, 56] out_shape: [2, 64, 56, 56]
mut Basic type: True
candidate_in_mutlayers_indice:0
mutate state: before
mutate input_shape: [2, 17]
mut_result:True
98 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:2
select layer: layer2.3.conv2 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
select insert layer: Sigmoid<>
mut_result:True
99 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: layer3.2.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 14, 14] out_shape: [2, 256, 14, 14]
mut Basic type: True
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
replace Basic with CM op!
mut_result:True
100 generation!

mutation trace: {'1': [1], '2': [1, 2], '3': [1, 2, 3], '4': [1, 2, 3, 4], '5': [1, 2, 3, 4, 5], '6': [1, 2, 3, 4, 5, 6], '7': [1, 2, 3, 4, 5, 6, 7], '8': [1, 2, 3, 4, 5, 6, 7, 8], '9': [1, 2, 3, 4, 5, 6, 7, 8, 9], '10': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], '11': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], '12': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], '13': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], '14': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], '15': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], '16': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], '17': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], '18': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], '19': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], '20': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], '21': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], '22': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], '23': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], '24': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], '25': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], '26': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], '27': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], '28': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], '29': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], '30': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], '31': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], '32': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], '33': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], '34': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], '35': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], '36': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], '37': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], '38': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], '39': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], '40': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], '41': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], '42': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], '43': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], '44': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], '45': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], '46': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], '47': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], '48': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], '49': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], '50': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], '51': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], '52': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52], '53': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], '54': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], '55': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], '56': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], '57': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], '58': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], '59': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], '60': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], '61': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], '62': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], '63': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], '64': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], '65': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], '66': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], '67': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], '68': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], '69': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], '70': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], '71': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], '72': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], '73': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], '74': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], '75': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75], '76': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], '77': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], '78': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], '79': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], '80': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], '81': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], '82': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], '83': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], '84': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], '85': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], '86': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], '87': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], '88': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], '89': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], '90': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], '91': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], '92': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], '93': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], '94': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], '95': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], '96': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], '97': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], '98': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], '99': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], '100': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]}
