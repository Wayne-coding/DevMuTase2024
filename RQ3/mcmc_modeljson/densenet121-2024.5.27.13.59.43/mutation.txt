Adopt SM mut_strategy!
select layer: features.6.8.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 32, 28, 28]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 48]
mut_result:True
1 generation!

Adopt SM mut_strategy!
select layer: features.6.5.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 32, 28, 28]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 7]
mut_result:True
2 generation!

Adopt LD mut_strategy!
delete layer_name:features.8.6.bn2
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
3 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.6.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 320, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
select insert layer: Dense<input_channels=320, output_channels=128>
Illegal CM mutate!
For primitive[Conv2D], the input type must be same.
name:[w]:Ref[Tensor[Float32]].
name:[x]:Tensor[Float16].

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/utils/check_convert_utils.cc:1028 _CheckTypeSame

mut_result:CM Create illegal layer!
4 generation!

Adopt SM mut_strategy!
select layer: features.10.14.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 960, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 39]
mut_result:True
5 generation!

Adopt PM mut_strategy!
The target model do not have the mutator operators keep_prob!
mut_result:Parameter Miss
6 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.6.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: MaxPool2d<kernel_size=1, stride=1, pad_mode=VALID>
insert_layer_outshape equal!
mut_result:True
7 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.4.4.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 56, 56] out_shape: [2, 128, 56, 56]
mut Basic type: True
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
replace Basic with CM op!
mut_result:True
8 generation!

Adopt LD mut_strategy!
delete layer_name:features.10.10.bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
9 generation!

Adopt LC mut_strategy!
select layer: features.10.13.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 32, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=32, output_channels=32, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f661b870e50>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
10 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.20.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 32, 14, 14]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=128, output_channels=32, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f6618d3e910>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=32, eps=1e-05, momentum=0.9, gamma=Parameter (name=downsample_bn.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=downsample_bn.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=downsample_bn.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=downsample_bn.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  >
insert_layer_outshape equal!
mut_result:True
11 generation!

Adopt SM mut_strategy!
select layer: features.4.1.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 56, 56] out_shape: [2, 128, 56, 56]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 16, 22, 20]
mut_result:True
12 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.5.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 288, 28, 28] out_shape: [2, 288, 28, 28]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
insert_layer_outshape not equal!: [2, 288, 28, 28]
mut_result:True
13 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.4.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 384, 14, 14] out_shape: [2, 384, 14, 14]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 384, 14, 14]
mut_result:True
14 generation!

Adopt SM mut_strategy!
select layer: features.4.3.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 160, 56, 56] out_shape: [2, 160, 56, 56]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 35, 30, 37, 35]
mut_result:True
15 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.8.7.conv1 layer_type: Conv2d selected param:out_channels input_shape:[2, 480, 14, 14] output_shape:[2, 128, 14, 14]
Edit value: 32 new_inshape: (2, 480, 14, 14) new_outshape: (2, 32, 14, 14)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=480, output_channels=32, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d5ee63d0>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
16 generation!

Adopt SM mut_strategy!
select layer: features.10.1.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 544, 7, 7] out_shape: [2, 544, 7, 7]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 31, 14]
mut_result:True
17 generation!

Adopt SM mut_strategy!
select layer: features.10.1.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 544, 7, 7] out_shape: [2, 544, 7, 7]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 25, 1]
mut_result:True
18 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.12.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=128, output_channels=32, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65a01fe4d0>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=32, output_channels=32, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d4277f90>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=32, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d4277e50>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=128, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=128, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f6619000d50>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=128, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape equal!
mut_result:True
19 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.4.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=128, eps=1e-05, momentum=0.9, gamma=Parameter (name=gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(128,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
20 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.8.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 32, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=128, eps=1e-05, momentum=0.9, gamma=Parameter (name=gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(128,), dtype=Float32, requires_grad=False)>
insert_layer_outshape not equal!: [2, 32, 7, 7]
mut_result:True
21 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.22.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 960, 14, 14] out_shape: [2, 960, 14, 14]
mut Basic type: True
select insert layer: Softmax<>
replace Basic with CM op!
mut_result:True
22 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.14.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
select insert layer: Dense<input_channels=128, output_channels=128, has_bias=True>
Illegal CM mutate!
For 'MatMul', the type of 'x2' should be same as 'x1', but got 'x1' with type Tensor[Float16] and 'x2' with type Tensor[Float32].

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/ops/mat_mul.cc:143 InferType

mut_result:CM Create illegal layer!
23 generation!

Adopt LC mut_strategy!
select layer: features.10.2.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 576, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=128, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65bc30d910>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
24 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.11 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 1024, 7, 7] out_shape: [2, 1024, 7, 7]
mut Basic type: True
select insert layer: ReLU6<>
replace Basic with CM op!
mut_result:True
25 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.5.conv layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 56, 56] out_shape: [2, 128, 56, 56]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=256, output_channels=32, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d6017b90>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=32, output_channels=32, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65bc39f810>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=32, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d6017610>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=128, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=256, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f661b832610>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=128, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape equal!
mut_result:True
26 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.3.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Mish<>
insert_layer_outshape equal!
mut_result:True
27 generation!

Adopt SM mut_strategy!
select layer: features.8.18.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 32, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 38]
mut_result:True
28 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.5.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: convbnrelu<
  (conbnrelu_conv): Conv2d<input_channels=128, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d5a8af50>, bias_init=None, format=NCHW>
  (conbnrelu_bn): BatchNorm2d<num_features=128, eps=1e-05, momentum=0.9, gamma=Parameter (name=conbnrelu_bn.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=conbnrelu_bn.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=conbnrelu_bn.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=conbnrelu_bn.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  (conbnrelu_relu): ReLU<>
  >
insert_layer_outshape equal!
mut_result:True
29 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.11.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 608, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: LeakyReLU<>
insert_layer_outshape not equal!: [2, 128, 14, 14]
mut_result:True
30 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.7.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 736, 7, 7] out_shape: [2, 736, 7, 7]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 736, 7, 7]
mut_result:True
31 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.10.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 448, 28, 28] out_shape: [2, 448, 28, 28]
mut Basic type: True
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
replace Basic with CM op!
mut_result:True
32 generation!

Adopt LD mut_strategy!
delete layer_name:features.8.22.conv2
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
33 generation!

Adopt LD mut_strategy!
delete layer_name:features.8.14.conv2
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
34 generation!

Adopt SM mut_strategy!
select layer: features.8.2.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 5, 23, 33]
mut_result:True
35 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.7.bn layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 512, 28, 28] out_shape: [2, 512, 28, 28]
mut Basic type: True
select insert layer: BatchNorm2d<num_features=512, eps=1e-05, momentum=0.9, gamma=Parameter (name=gamma, shape=(512,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(512,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(512,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(512,), dtype=Float32, requires_grad=False)>
replace Basic with CM op!
mut_result:True
36 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.14.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Dense<input_channels=128, output_channels=128, has_bias=True>
insert_layer_outshape equal!
Illegal LA mutate!
For 'MatMul', the type of 'x2' should be same as 'x1', but got 'x1' with type Tensor[Float16] and 'x2' with type Tensor[Float32].

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/ops/mat_mul.cc:143 InferType

mut_result:LA Create illegal layer!
37 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.2.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
select insert layer: Softmax<>
replace Basic with CM op!
mut_result:True
38 generation!

Adopt SM mut_strategy!
select layer: features.8.8.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 512, 14, 14] out_shape: [2, 512, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 28, 28, 36]
mut_result:True
39 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.9.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 544, 14, 14] out_shape: [2, 544, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Tanh<>
insert_layer_outshape equal!
mut_result:True
40 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.17.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 800, 14, 14] out_shape: [2, 800, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Tanh<>
insert_layer_outshape equal!
mut_result:True
41 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.10.12.bn1 layer_type: BatchNorm2d selected param:num_features input_shape:[2, 896, 7, 7] output_shape:[2, 896, 7, 7]
Edit value: 298 new_inshape: (2, 298, 7, 7) new_outshape: (2, 298, 7, 7)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): BatchNorm2d<num_features=298, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=bn1.1.gamma, shape=(298,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn1.1.beta, shape=(298,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn1.1.moving_mean, shape=(298,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn1.1.moving_variance, shape=(298,), dtype=Float32, requires_grad=False)>
  (2): Replace_ms<>
  >
mut_result:True
42 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.10.5.bn1 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 672, 7, 7] output_shape:[2, 672, 7, 7]
Edit value: 0.033333333333333326 new_inshape: (2, 672, 7, 7) new_outshape: (2, 672, 7, 7)
BatchNorm2d<num_features=672, eps=1e-05, momentum=0.033333333333333326, gamma=Parameter (name=bn1.gamma, shape=(672,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn1.beta, shape=(672,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn1.moving_mean, shape=(672,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn1.moving_variance, shape=(672,), dtype=Float32, requires_grad=False)>
mut_result:True
43 generation!

Adopt LD mut_strategy!
delete layer_name:features.8.20.conv2
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
44 generation!

Adopt LD mut_strategy!
delete layer_name:features.6.0.bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
45 generation!

Adopt LC mut_strategy!
select layer: features.8.7.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=128, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(128,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
46 generation!

Adopt SM mut_strategy!
select layer: features.4.2.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 56, 56] out_shape: [2, 32, 56, 56]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 9, 22]
mutate output_shape: [2, 3, 20, 45]
mut_result:True
47 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.6.11.bn2 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 128, 28, 28] output_shape:[2, 128, 28, 28]
Edit value: 0.04999999999999999 new_inshape: (2, 128, 28, 28) new_outshape: (2, 128, 28, 28)
BatchNorm2d<num_features=128, eps=1e-05, momentum=0.050000000000000044, gamma=Parameter (name=bn2.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn2.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn2.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn2.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
mut_result:True
48 generation!

Adopt LC mut_strategy!
select layer: features.10.3.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 608, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=128, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f663b936490>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
49 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.8.19.bn1 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 864, 14, 14] output_shape:[2, 864, 14, 14]
Edit value: 0.033333333333333326 new_inshape: (2, 864, 14, 14) new_outshape: (2, 864, 14, 14)
BatchNorm2d<num_features=864, eps=1e-05, momentum=0.033333333333333326, gamma=Parameter (name=bn1.gamma, shape=(864,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn1.beta, shape=(864,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn1.moving_mean, shape=(864,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn1.moving_variance, shape=(864,), dtype=Float32, requires_grad=False)>
mut_result:True
50 generation!

Adopt SM mut_strategy!
select layer: features.6.5.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 32, 28, 28]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 37]
mut_result:True
51 generation!

Adopt SM mut_strategy!
select layer: features.8.20.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 896, 14, 14] out_shape: [2, 896, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 46, 33]
mutate output_shape: [2, 24, 18]
mut_result:True
52 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.15.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: MaxPool2d<kernel_size=1, stride=1, pad_mode=VALID>
insert_layer_outshape equal!
mut_result:True
53 generation!

Adopt LD mut_strategy!
delete layer_name:features.8.10.bn2
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
54 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.2.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 576, 7, 7] out_shape: [2, 576, 7, 7]
mut Basic type: True
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
replace Basic with CM op!
mut_result:True
55 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.1.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 544, 7, 7] out_shape: [2, 544, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2dTranspose<input_channels=544, output_channels=544, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d5e92e90>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
56 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.14.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
select insert layer: ELU<>
replace Basic with CM op!
mut_result:True
57 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.6.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 128, 14, 14]
mut_result:True
58 generation!

Adopt SM mut_strategy!
select layer: features.10.15.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 32, 7, 7]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 31, 16, 5, 17]
mut_result:True
59 generation!

Adopt SM mut_strategy!
select layer: features.6.1.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 160, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 29, 49, 29, 39]
mutate output_shape: [2, 33, 40]
mut_result:True
60 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.14.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Dropout<keep_prob=0.5>
insert_layer_outshape equal!
mut_result:True
61 generation!

Adopt SM mut_strategy!
select layer: features.4.1.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 56, 56] out_shape: [2, 32, 56, 56]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 44]
mut_result:True
62 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.10.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 32, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Dense<input_channels=128, output_channels=32>
Illegal RA mutate!
For 'MatMul', the type of 'x2' should be same as 'x1', but got 'x1' with type Tensor[Float16] and 'x2' with type Tensor[Float32].

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/ops/mat_mul.cc:143 InferType

mut_result:RA Create illegal layer!
63 generation!

Adopt SM mut_strategy!
select layer: features.8.19.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 864, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 35, 50]
mut_result:True
64 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.20.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=128, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f66180b60d0>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=128, eps=1e-05, momentum=0.9, gamma=Parameter (name=1.downsample_bn.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=1.downsample_bn.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=1.downsample_bn.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=1.downsample_bn.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  >
replace Basic with CM op!
mut_result:True
65 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.6.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 32, 28, 28]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=128, output_channels=8, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65bc2f2290>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=8, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(8,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(8,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(8,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(8,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=8, output_channels=8, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65bc2f2710>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=8, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(8,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(8,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(8,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(8,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=8, output_channels=32, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65bc2f2ed0>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=128, output_channels=32, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f663b924690>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape equal!
mut_result:True
66 generation!

Adopt LD mut_strategy!
delete layer_name:features.6.7.conv1
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
67 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.4.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 28, 28] out_shape: [2, 256, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2dTranspose<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65bc543e10>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
68 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.15.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 32, 14, 14]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=128, output_channels=8, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d75a3cd0>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=8, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(8,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(8,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(8,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(8,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=8, output_channels=8, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65bc5443d0>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=8, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(8,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(8,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(8,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(8,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=8, output_channels=32, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d75a3e50>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=128, output_channels=32, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d4269850>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=32, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape equal!
mut_result:True
69 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.4.1.conv1 layer_type: Conv2d selected param:group input_shape:[2, 96, 56, 56] output_shape:[2, 128, 56, 56]
Edit value: 2 new_inshape: (2, 96, 56, 56) new_outshape: (2, 128, 56, 56)
Conv2d<input_channels=96, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=2, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d42b7750>, bias_init=None, format=NCHW>
mut_result:True
70 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:1
select layer: features.6.8.conv2 layer_type: <class 'mindspore.nn.layer.container.SequentialCell'> in_shape: [2, 128, 28, 28] out_shape: [2, 32, 28, 28]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape equal!
mut_result:False
71 generation!

Adopt LD mut_strategy!
delete layer_name:features.8.8.conv1
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
72 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.6.0.conv2 layer_type: Conv2d selected param:in_channels input_shape:[2, 128, 28, 28] output_shape:[2, 32, 28, 28]
Edit value: 32 new_inshape: (2, 32, 28, 28) new_outshape: (2, 32, 28, 28)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): Conv2d<input_channels=32, output_channels=32, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65a0610ad0>, bias_init=None, format=NCHW>
  >
mut_result:True
73 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.11.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 32, 28, 28]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Mish<>
insert_layer_outshape not equal!: [2, 32, 28, 28]
mut_result:True
74 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.8.4.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 384, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
replace Basic with CM op!
mut_result:True
75 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.13.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Dense<input_channels=128, output_channels=128>
Illegal RA mutate!
For 'MatMul', the type of 'x2' should be same as 'x1', but got 'x1' with type Tensor[Float16] and 'x2' with type Tensor[Float32].

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/ops/mat_mul.cc:143 InferType

mut_result:RA Create illegal layer!
76 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.4.4.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 192, 56, 56] out_shape: [2, 128, 56, 56]
mut Basic type: True
select insert layer: ReLU6<>
replace Basic with CM op!
mut_result:True
77 generation!

Adopt LC mut_strategy!
select layer: features.10.1.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=128, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(128,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
78 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.8.14.conv1 layer_type: Conv2d selected param:group input_shape:[2, 704, 14, 14] output_shape:[2, 128, 14, 14]
Edit value: 4 new_inshape: (2, 704, 14, 14) new_outshape: (2, 128, 14, 14)
Conv2d<input_channels=704, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=4, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f6618d4ae50>, bias_init=None, format=NCHW>
mut_result:True
79 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.4.2.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 56, 56] out_shape: [2, 128, 56, 56]
mut Basic type: True
select insert layer: LeakyReLU<>
replace Basic with CM op!
mut_result:True
80 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.6.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 704, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Softmax<>
insert_layer_outshape equal!
mut_result:True
81 generation!

Adopt LC mut_strategy!
select layer: features.4.0.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 64, 56, 56] out_shape: [2, 64, 56, 56]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=64, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(64,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(64,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(64,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(64,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
82 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.5.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 32, 7, 7]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:False
83 generation!

Adopt SM mut_strategy!
select layer: features.8.4.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 384, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 26, 17]
mut_result:True
84 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.8.21.conv1 layer_type: Conv2d selected param:stride input_shape:[2, 928, 14, 14] output_shape:[2, 128, 14, 14]
Edit value: (3, 2) new_inshape: (2, 928, 14, 14) new_outshape: (2, 128, 5, 7)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=928, output_channels=128, kernel_size=(1, 1), stride=(3, 2), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d409a990>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
85 generation!

Adopt LD mut_strategy!
delete layer_name:features.6.9.bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
86 generation!

Adopt SM mut_strategy!
select layer: features.8.11.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 32, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 40]
mut_result:True
87 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.10.13.conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 928, 7, 7] out_shape: [2, 128, 7, 7]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 128, 7, 7]
mut_result:True
88 generation!

Adopt SM mut_strategy!
select layer: features.8.23.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 32, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 27]
mutate output_shape: [2, 30, 24, 12]
mut_result:True
89 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.4.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 28, 28] out_shape: [2, 256, 28, 28]
mut Basic type: True
select insert layer: Tanh<>
replace Basic with CM op!
mut_result:True
90 generation!

Adopt LC mut_strategy!
select layer: features.8.18.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 32, 14, 14]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=32, output_channels=32, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f6618e43910>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
91 generation!

Adopt LC mut_strategy!
select layer: features.10.15.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 7, 7] out_shape: [2, 32, 7, 7]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=32, output_channels=32, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f661b85be50>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
92 generation!

Adopt SM mut_strategy!
select layer: features.8.20.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 14, 14] out_shape: [2, 128, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 26, 14, 12]
mutate output_shape: [2, 8, 34, 50, 30]
mut_result:True
93 generation!

Adopt SM mut_strategy!
select layer: features.8.22.bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 960, 14, 14] out_shape: [2, 960, 14, 14]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 23]
mutate output_shape: [2, 5, 21, 34, 49]
mut_result:True
94 generation!

Adopt LD mut_strategy!
delete layer_name:features.8.16.conv2
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
95 generation!

Adopt SM mut_strategy!
select layer: features.6.1.conv2 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 32, 28, 28]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 19]
mutate output_shape: [2, 19, 25]
mut_result:True
96 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.4.0.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 56, 56] out_shape: [2, 128, 56, 56]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: convbnrelu<
  (conbnrelu_conv): Conv2d<input_channels=128, output_channels=128, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7f65d751d050>, bias_init=None, format=NCHW>
  (conbnrelu_bn): BatchNorm2d<num_features=128, eps=1e-05, momentum=0.9, gamma=Parameter (name=conbnrelu_bn.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=conbnrelu_bn.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=conbnrelu_bn.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=conbnrelu_bn.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  (conbnrelu_relu): ReLU<>
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:True
97 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: features.8.23.bn2 layer_type: BatchNorm2d selected param:num_features input_shape:[2, 128, 14, 14] output_shape:[2, 128, 14, 14]
Edit value: 42 new_inshape: (2, 42, 14, 14) new_outshape: (2, 42, 14, 14)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): BatchNorm2d<num_features=42, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=bn2.1.gamma, shape=(42,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn2.1.beta, shape=(42,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn2.1.moving_mean, shape=(42,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn2.1.moving_variance, shape=(42,), dtype=Float32, requires_grad=False)>
  (2): Replace_ms<>
  >
mut_result:True
98 generation!

Adopt LD mut_strategy!
delete layer_name:features.8.16.conv1
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
99 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: features.6.9.bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 128, 28, 28] out_shape: [2, 128, 28, 28]
mut Basic type: True
select insert layer: GELU<>
replace Basic with CM op!
mut_result:True
100 generation!

mutation trace: {'1': [1], '2': [1, 2], '3': [3], '4': [1, 2, 4], '5': [1, 2, 5], '6': [1, 6], '7': [1, 7], '8': [1, 7, 8], '9': [1, 2, 9], '10': [1, 10], '11': [1, 7, 11], '12': [1, 2, 12], '13': [1, 2, 13], '14': [1, 2, 14], '15': [1, 15], '16': [1, 16], '17': [1, 7, 17], '18': [1, 7, 18], '19': [19], '20': [1, 7, 20], '21': [1, 2, 21], '22': [1, 2, 22], '23': [1, 7, 23], '24': [1, 7, 24], '25': [1, 25], '26': [1, 2, 26], '27': [27], '28': [28], '29': [29], '30': [1, 30], '31': [1, 30, 31], '32': [1, 30, 32], '33': [1, 30, 33], '34': [1, 34], '35': [1, 7, 35], '36': [36], '37': [1, 30, 37], '38': [1, 7, 38], '39': [1, 39], '40': [40], '41': [41], '42': [1, 42], '43': [1, 30, 43], '44': [1, 30, 44], '45': [1, 30, 45], '46': [1, 7, 46], '47': [1, 30, 47], '48': [1, 7, 48], '49': [49], '50': [1, 2, 50], '51': [1, 51], '52': [1, 52], '53': [53], '54': [1, 30, 54], '55': [1, 2, 55], '56': [1, 7, 56], '57': [1, 7, 57], '58': [1, 30, 58], '59': [59], '60': [1, 30, 60], '61': [1, 7, 61], '62': [1, 30, 62], '63': [1, 2, 63], '64': [64], '65': [1, 7, 65], '66': [1, 30, 66], '67': [67], '68': [68], '69': [1, 69], '70': [1, 30, 70], '71': [1, 71], '72': [1, 2, 72], '73': [1, 2, 73], '74': [1, 7, 74], '75': [1, 7, 75], '76': [1, 7, 76], '77': [1, 30, 77], '78': [1, 2, 78], '79': [1, 30, 79], '80': [1, 80], '81': [1, 81], '82': [82], '83': [1, 2, 83], '84': [1, 2, 84], '85': [85], '86': [1, 2, 86], '87': [1, 2, 87], '88': [1, 30, 88], '89': [1, 2, 89], '90': [1, 90], '91': [1, 30, 91], '92': [1, 7, 92], '93': [93], '94': [94], '95': [95], '96': [1, 2, 96], '97': [1, 7, 97], '98': [1, 2, 98], '99': [1, 7, 99], '100': [1, 7, 100]}
