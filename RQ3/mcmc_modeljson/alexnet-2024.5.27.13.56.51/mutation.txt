Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: pool2 layer_type: <class 'mindspore.nn.layer.pooling.MaxPool2d'> in_shape: [2, 256, 8, 8] out_shape: [2, 256, 4, 4]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: MaxPool2d<kernel_size=1, stride=1, pad_mode=VALID>
insert_layer_outshape not equal!: [2, 256, 4, 4]
mut_result:True
1 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 384, 4, 4]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: AvgPool2d<kernel_size=1, stride=1, pad_mode=VALID>
insert_layer_outshape not equal!: [2, 384, 4, 4]
mut_result:True
2 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: pool3 layer_type: MaxPool2d selected param:stride input_shape:[2, 256, 4, 4] output_shape:[2, 256, 2, 2]
Edit value: (4, 2) new_inshape: (2, 256, 4, 4) new_outshape: (2, 256, 1, 1)
mutate op infor:
SequentialCell<
  (0): MaxPool2d<kernel_size=3, stride=(4, 2), pad_mode=VALID>
  (1): Replace_ms<>
  >
mut_result:True
3 generation!

Adopt SM mut_strategy!
select layer: conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 384, 4, 4]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 4]
mut_result:True
4 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: conv5 layer_type: Conv2d selected param:out_channels input_shape:[2, 384, 4, 4] output_shape:[2, 256, 4, 4]
Edit value: 512 new_inshape: (2, 384, 4, 4) new_outshape: (2, 512, 4, 4)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=384, output_channels=512, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa34cb10>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
5 generation!

Adopt SM mut_strategy!
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 8, 12]
mut_result:True
6 generation!

Adopt SM mut_strategy!
select layer: dropout1 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 50]
mut_result:True
7 generation!

Adopt SM mut_strategy!
select layer: bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 96, 8, 8] out_shape: [2, 96, 8, 8]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 5, 35, 10]
mut_result:True
8 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: conv2 layer_type: Conv2d selected param:stride input_shape:[2, 96, 8, 8] output_shape:[2, 256, 8, 8]
Edit value: (3, 3) new_inshape: (2, 96, 8, 8) new_outshape: (2, 256, 3, 3)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=96, output_channels=256, kernel_size=(5, 5), stride=(3, 3), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa2c3350>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
9 generation!

Adopt LD mut_strategy!
delete layer_name:bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
10 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: dropout1 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: ReLU<>
insert_layer_outshape equal!
mut_result:True
11 generation!

Adopt LC mut_strategy!
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
12 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: fc1 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 1024] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=1024, eps=1e-05, momentum=0.9, gamma=Parameter (name=gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(1024,), dtype=Float32, requires_grad=False)>
insert_layer_outshape not equal!: [2, 4096]
mut_result:True
13 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: fc1 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 1024] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 4096]
mut_result:True
14 generation!

Adopt RA mut_strategy!
mut_result:No suitable ops for RA mutation!
15 generation!

Adopt LC mut_strategy!
select layer: conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 3, 32, 32] out_shape: [2, 96, 16, 16]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=96, output_channels=96, kernel_size=(3, 3), stride=(2, 2), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa3642d0>, bias_init=None, format=NCHW>
insert_layer_outshape not equal!: [2, 96, 16, 16]
mut_result:True
16 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: conv1 layer_type: Conv2d selected param:group input_shape:[2, 3, 32, 32] output_shape:[2, 96, 16, 16]
Edit value: 1 new_inshape: (2, 3, 32, 32) new_outshape: (2, 96, 16, 16)
Conv2d<input_channels=3, output_channels=96, kernel_size=(3, 3), stride=(2, 2), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa3e5350>, bias_init=None, format=NCHW>
mut_result:True
17 generation!

Adopt LD mut_strategy!
delete layer_name:conv4
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
18 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: fc2 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: LeakyReLU<>
insert_layer_outshape equal!
mut_result:True
19 generation!

Adopt LD mut_strategy!
delete layer_name:bn2
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
20 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2dTranspose<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa25fb90>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
21 generation!

Adopt LC mut_strategy!
select layer: fc3 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 4096] out_shape: [2, 10]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Dense<input_channels=4096, output_channels=10, has_bias=True>
Illegal LC mutate!
For 'MatMul', the type of 'x2' should be same as 'x1', but got 'x1' with type Tensor[Float16] and 'x2' with type Tensor[Float32].

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/ops/mat_mul.cc:143 InferType

mut_result:LC Create illegal layer!
22 generation!

Adopt LC mut_strategy!
select layer: pool1 layer_type: <class 'mindspore.nn.layer.pooling.MaxPool2d'> in_shape: [2, 96, 16, 16] out_shape: [2, 96, 8, 8]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: MaxPool2d<kernel_size=3, stride=2, pad_mode=VALID>
insert_layer_outshape not equal!: [2, 96, 8, 8]
mut_result:True
23 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: conv3 layer_type: Conv2d selected param:out_channels input_shape:[2, 256, 4, 4] output_shape:[2, 384, 4, 4]
Edit value: 96 new_inshape: (2, 256, 4, 4) new_outshape: (2, 96, 4, 4)
mutate op infor:
SequentialCell<
  (0): Conv2d<input_channels=256, output_channels=96, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa281850>, bias_init=None, format=NCHW>
  (1): Replace_ms<>
  >
mut_result:True
24 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 384, 4, 4]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Tanh<>
insert_layer_outshape equal!
mut_result:True
25 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: fc2 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
select insert layer: ELU<>
replace Basic with CM op!
mut_result:True
26 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: convbnrelu<
  (conbnrelu_conv): Conv2d<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa3dca90>, bias_init=None, format=NCHW>
  (conbnrelu_bn): BatchNorm2d<num_features=256, eps=1e-05, momentum=0.9, gamma=Parameter (name=conbnrelu_bn.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=conbnrelu_bn.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=conbnrelu_bn.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=conbnrelu_bn.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
  (conbnrelu_relu): ReLU<>
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:True
27 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: pool1 layer_type: <class 'mindspore.nn.layer.pooling.MaxPool2d'> in_shape: [2, 96, 16, 16] out_shape: [2, 96, 8, 8]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=96, output_channels=96, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9752250>, bias_init=None, format=NCHW>
insert_layer_outshape not equal!: [2, 96, 8, 8]
mut_result:True
28 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: pool2 layer_type: <class 'mindspore.nn.layer.pooling.MaxPool2d'> in_shape: [2, 256, 8, 8] out_shape: [2, 256, 4, 4]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9b95650>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=256, eps=1e-05, momentum=0.9, gamma=Parameter (name=downsample_bn.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=downsample_bn.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=downsample_bn.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=downsample_bn.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:True
29 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: flatten layer_type: <class 'mindspore.nn.layer.basic.Flatten'> in_shape: [2, 256, 2, 2] out_shape: [2, 1024]
mut Basic type: True
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=256, output_channels=1024, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9e53610>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=1024, eps=1e-05, momentum=0.9, gamma=Parameter (name=1.downsample_bn.gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=1.downsample_bn.beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=1.downsample_bn.moving_mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=1.downsample_bn.moving_variance, shape=(1024,), dtype=Float32, requires_grad=False)>
  >
replace Basic with CM op!
mut_result:True
30 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 256, 2, 2]
mut_result:True
31 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: conv4 layer_type: Conv2d selected param:in_channels input_shape:[2, 384, 4, 4] output_shape:[2, 384, 4, 4]
Edit value: 128 new_inshape: (2, 128, 4, 4) new_outshape: (2, 384, 4, 4)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): Conv2d<input_channels=128, output_channels=384, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9ad74d0>, bias_init=None, format=NCHW>
  >
mut_result:True
32 generation!

Adopt LA mut_strategy!
mut_result:No suitable ops for LA mutation!
33 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: flatten layer_type: <class 'mindspore.nn.layer.basic.Flatten'> in_shape: [2, 256, 2, 2] out_shape: [2, 1024]
mut Basic type: True
select insert layer: AvgPool2d<kernel_size=1, stride=1, pad_mode=VALID>
replace Basic with CM op!
mut_result:True
34 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: bn3 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 256, 2, 2] output_shape:[2, 256, 2, 2]
Edit value: 0.033333333333333326 new_inshape: (2, 256, 2, 2) new_outshape: (2, 256, 2, 2)
BatchNorm2d<num_features=256, eps=1e-05, momentum=0.033333333333333326, gamma=Parameter (name=bn3.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn3.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn3.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn3.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
mut_result:True
35 generation!

Adopt LD mut_strategy!
delete layer_name:fc2
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
36 generation!

Adopt LD mut_strategy!
delete layer_name:conv4
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
37 generation!

Adopt LD mut_strategy!
delete layer_name:dropout1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
38 generation!

Adopt LC mut_strategy!
select layer: bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
39 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: dropout2 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
select insert layer: LeakyReLU<>
replace Basic with CM op!
mut_result:True
40 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: fc2 layer_type: <class 'common.mutation_ms.Layer_utils.CM_branchCell'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: downsample<
  (downsample_conv): Conv2d<input_channels=4096, output_channels=4096, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa306590>, bias_init=None, format=NCHW>
  (downsample_bn): BatchNorm2d<num_features=4096, eps=1e-05, momentum=0.9, gamma=Parameter (name=downsample_bn.gamma, shape=(4096,), dtype=Float32, requires_grad=True), beta=Parameter (name=downsample_bn.beta, shape=(4096,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=downsample_bn.moving_mean, shape=(4096,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=downsample_bn.moving_variance, shape=(4096,), dtype=Float32, requires_grad=False)>
  >
insert_layer_outshape not equal!: [2, 4096]
mut_result:True
41 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 384, 4, 4]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=256, output_channels=384, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa3dab90>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:True
42 generation!

Adopt LC mut_strategy!
select layer: pool1 layer_type: <class 'mindspore.nn.layer.pooling.MaxPool2d'> in_shape: [2, 96, 16, 16] out_shape: [2, 96, 8, 8]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: MaxPool2d<kernel_size=3, stride=2, pad_mode=VALID>
insert_layer_outshape not equal!: [2, 96, 8, 8]
mut_result:True
43 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
select insert layer: AvgPool2d<kernel_size=1, stride=1, pad_mode=VALID>
replace Basic with CM op!
mut_result:True
44 generation!

Adopt LD mut_strategy!
delete layer_name:flatten
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
45 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
insert_layer_outshape not equal!: [2, 256, 2, 2]
mut_result:True
46 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: dropout2 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 4096]
mut_result:True
47 generation!

Adopt LD mut_strategy!
delete layer_name:conv3
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
48 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 384, 4, 4]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: convbnrelu<
  (conbnrelu_conv): Conv2d<input_channels=256, output_channels=384, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa2c7450>, bias_init=None, format=NCHW>
  (conbnrelu_bn): BatchNorm2d<num_features=384, eps=1e-05, momentum=0.9, gamma=Parameter (name=conbnrelu_bn.gamma, shape=(384,), dtype=Float32, requires_grad=True), beta=Parameter (name=conbnrelu_bn.beta, shape=(384,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=conbnrelu_bn.moving_mean, shape=(384,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=conbnrelu_bn.moving_variance, shape=(384,), dtype=Float32, requires_grad=False)>
  (conbnrelu_relu): ReLU<>
  >
insert_layer_outshape equal!
mut_result:True
49 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: conv5 layer_type: Conv2d selected param:in_channels input_shape:[2, 384, 4, 4] output_shape:[2, 256, 4, 4]
Edit value: 192 new_inshape: (2, 192, 4, 4) new_outshape: (2, 256, 4, 4)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): Conv2d<input_channels=192, output_channels=256, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa2b6c90>, bias_init=None, format=NCHW>
  >
mut_result:True
50 generation!

Adopt LD mut_strategy!
delete layer_name:fc2
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
51 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: bn2 layer_type: BatchNorm2d selected param:eps input_shape:[2, 256, 4, 4] output_shape:[2, 256, 4, 4]
Edit value: 2e-05 new_inshape: (2, 256, 4, 4) new_outshape: (2, 256, 4, 4)
BatchNorm2d<num_features=256, eps=2e-05, momentum=0.09999999999999998, gamma=Parameter (name=bn2.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn2.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn2.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn2.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
mut_result:True
52 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: fc2 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
select insert layer: Softmax<>
replace Basic with CM op!
mut_result:True
53 generation!

Adopt SM mut_strategy!
select layer: flatten layer_type: <class 'mindspore.nn.layer.basic.Flatten'> in_shape: [2, 256, 2, 2] out_shape: [2, 1024]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 41, 46]
mutate output_shape: [2, 14, 13]
mut_result:True
54 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: conv1 layer_type: Conv2d selected param:group input_shape:[2, 3, 32, 32] output_shape:[2, 96, 16, 16]
Edit value: 3 new_inshape: (2, 3, 32, 32) new_outshape: (2, 96, 16, 16)
Conv2d<input_channels=3, output_channels=96, kernel_size=(3, 3), stride=(2, 2), pad_mode=same, padding=0, dilation=(1, 1), group=3, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa2bde90>, bias_init=None, format=NCHW>
mut_result:True
55 generation!

Adopt SM mut_strategy!
select layer: pool2 layer_type: <class 'mindspore.nn.layer.pooling.MaxPool2d'> in_shape: [2, 256, 8, 8] out_shape: [2, 256, 4, 4]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 40]
mutate output_shape: [2, 8, 27, 48, 36]
mut_result:True
56 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: pool1 layer_type: <class 'mindspore.nn.layer.pooling.MaxPool2d'> in_shape: [2, 96, 16, 16] out_shape: [2, 96, 8, 8]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Dropout<keep_prob=0.5>
insert_layer_outshape equal!
mut_result:True
57 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: pool3 layer_type: MaxPool2d selected param:stride input_shape:[2, 256, 4, 4] output_shape:[2, 256, 2, 2]
Edit value: (2, 2) new_inshape: (2, 256, 4, 4) new_outshape: (2, 256, 1, 1)
mutate op infor:
SequentialCell<
  (0): MaxPool2d<kernel_size=3, stride=(2, 2), pad_mode=VALID>
  (1): Replace_ms<>
  >
mut_result:True
58 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: conv2 layer_type: Conv2d selected param:kernel_size input_shape:[2, 96, 8, 8] output_shape:[2, 256, 8, 8]
Edit value: (3, 3) new_inshape: (2, 96, 8, 8) new_outshape: (2, 256, 8, 8)
Conv2d<input_channels=96, output_channels=256, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9ff0590>, bias_init=None, format=NCHW>
mut_result:True
59 generation!

Adopt LC mut_strategy!
select layer: pool3 layer_type: <class 'mindspore.nn.layer.pooling.MaxPool2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 256, 2, 2]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: MaxPool2d<kernel_size=3, stride=2, pad_mode=VALID>
Illegal LC mutate!
For 'MaxPool', the each element of the output shape must be larger than 0, but got output shape: [const vector]{2, 256, 0, 0}. The input shape: [const vector]{2, 256, 2, 2}, kernel size: [const vector]{1, 1, 3, 3}, strides: [const vector]{1, 1, 2, 2}. Please check the official api documents for more information about the output.

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/ops/max_pool.cc:84 CheckOutshapeValid

mut_result:LC Create illegal layer!
60 generation!

Adopt LC mut_strategy!
select layer: bn1 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 96, 8, 8] out_shape: [2, 96, 8, 8]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=96, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(96,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(96,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(96,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(96,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
61 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: dropout1 layer_type: Dropout selected param:keep_prob input_shape:[2, 4096] output_shape:[2, 4096]
Edit value: 0.25 new_inshape: (2, 4096) new_outshape: (2, 4096)
Dropout<keep_prob=0.25>
mut_result:True
62 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: dropout2 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=4096, output_channels=4096, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9f57790>, bias_init=None, format=NCHW>
insert_layer_outshape not equal!: [2, 4096]
mut_result:True
63 generation!

Adopt LC mut_strategy!
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
64 generation!

Adopt LC mut_strategy!
select layer: conv1 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 3, 32, 32] out_shape: [2, 96, 16, 16]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=96, output_channels=96, kernel_size=(3, 3), stride=(2, 2), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9fca0d0>, bias_init=None, format=NCHW>
insert_layer_outshape not equal!: [2, 96, 16, 16]
mut_result:True
65 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: dropout1 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: LeakyReLU<>
insert_layer_outshape equal!
mut_result:True
66 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
select insert layer: ReLU6<>
replace Basic with CM op!
mut_result:True
67 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
select insert layer: dwpw_group<
  (depthwise): dwpw_basic<
    (dwpw_conv): Conv2d<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=256, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9eda3d0>, bias_init=None, format=NCHW>
    (dwpw_bn): BatchNorm2d<num_features=256, eps=1e-05, momentum=0.9, gamma=Parameter (name=1.depthwise.dwpw_bn.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=1.depthwise.dwpw_bn.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=1.depthwise.dwpw_bn.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=1.depthwise.dwpw_bn.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
    (dwpw_activation): GELU<>
    >
  (pointwise): dwpw_basic<
    (dwpw_conv): Conv2d<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9efb590>, bias_init=None, format=NCHW>
    (dwpw_bn): BatchNorm2d<num_features=256, eps=1e-05, momentum=0.9, gamma=Parameter (name=1.pointwise.dwpw_bn.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=1.pointwise.dwpw_bn.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=1.pointwise.dwpw_bn.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=1.pointwise.dwpw_bn.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
    (dwpw_activation): GELU<>
    >
  >
replace Basic with CM op!
mut_result:True
68 generation!

Adopt LD mut_strategy!
delete layer_name:bn1
candidate_in_mutlayers_indice:-1
adopt DeleteCell EmptyCell
mut_result:True
69 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv5 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 384, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Sigmoid<>
insert_layer_outshape equal!
mut_result:True
70 generation!

Adopt LD mut_strategy!
delete layer_name:fc3
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
71 generation!

Adopt LA mut_strategy!
mut_result:No suitable ops for LA mutation!
72 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv5 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 384, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:False
73 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: pool3 layer_type: MaxPool2d selected param:stride input_shape:[2, 256, 4, 4] output_shape:[2, 256, 2, 2]
Edit value: (3, 3) new_inshape: (2, 256, 4, 4) new_outshape: (2, 256, 1, 1)
mutate op infor:
SequentialCell<
  (0): MaxPool2d<kernel_size=3, stride=(3, 3), pad_mode=VALID>
  (1): Replace_ms<>
  >
mut_result:True
74 generation!

Adopt SM mut_strategy!
select layer: dropout1 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 43, 9, 9]
mutate output_shape: [2, 7, 23, 25, 45]
mut_result:True
75 generation!

Adopt LC mut_strategy!
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: BatchNorm2d<num_features=256, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=variance, shape=(256,), dtype=Float32, requires_grad=False)>
insert_layer_outshape equal!
mut_result:True
76 generation!

Adopt SM mut_strategy!
select layer: fc3 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 4096] out_shape: [2, 10]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 47]
mut_result:True
77 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv5 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 384, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
select insert layer: Sigmoid<>
replace Basic with CM op!
mut_result:True
78 generation!

Adopt SM mut_strategy!
select layer: conv5 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 384, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 12, 3, 30]
mutate output_shape: [2, 8, 35, 12]
mut_result:True
79 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: bn3 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 256, 2, 2] output_shape:[2, 256, 2, 2]
Edit value: 0.04999999999999999 new_inshape: (2, 256, 2, 2) new_outshape: (2, 256, 2, 2)
BatchNorm2d<num_features=256, eps=1e-05, momentum=0.050000000000000044, gamma=Parameter (name=bn3.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn3.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn3.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn3.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
mut_result:True
80 generation!

Adopt LC mut_strategy!
select layer: fc3 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 4096] out_shape: [2, 10]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Dense<input_channels=4096, output_channels=10, has_bias=True>
Illegal LC mutate!
For 'MatMul', the type of 'x2' should be same as 'x1', but got 'x1' with type Tensor[Float16] and 'x2' with type Tensor[Float32].

----------------------------------------------------
- C++ Call Stack: (For framework developers)
----------------------------------------------------
mindspore/core/ops/mat_mul.cc:143 InferType

mut_result:LC Create illegal layer!
81 generation!

Adopt LD mut_strategy!
delete layer_name:conv3
candidate_in_mutlayers_indice:-1
adopt DeleteCell Replace_ms
mut_result:True
82 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn2 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=256, output_channels=64, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9ba7190>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=64, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(64,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(64,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(64,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(64,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=64, output_channels=64, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9ba7350>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=64, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(64,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(64,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(64,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(64,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=64, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9a86710>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=256, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=256, output_channels=256, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9ba7210>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=256, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape equal!
mut_result:True
83 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: fc1 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 1024] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=4096, output_channels=1024, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9f56410>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=1024, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(1024,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=1024, output_channels=1024, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9e6d0d0>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=1024, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(1024,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(1024,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(1024,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(1024,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=1024, output_channels=4096, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccd4109310>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=4096, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(4096,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(4096,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(4096,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(4096,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=4096, output_channels=4096, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9e6d4d0>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=4096, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(4096,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(4096,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(4096,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(4096,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape equal!
add Cascade_op after basicop!
mut_result:False
84 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv5 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 384, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: GELU<>
insert_layer_outshape not equal!: [2, 256, 4, 4]
mut_result:True
85 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 384, 4, 4]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: SE<
  (SE_pool): GlobalAvgPooling<>
  (act): HSigmoid<>
  (SE_act1): ReLU<>
  (SE_act2): HSigmoid<>
  >
insert_layer_outshape not equal!: [2, 384, 4, 4]
mut_result:True
86 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: fc3 layer_type: <class 'mindspore.nn.layer.basic.Dense'> in_shape: [2, 4096] out_shape: [2, 10]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: ResidualBlock<
  (residual_conv1): Conv2d<input_channels=4096, output_channels=2, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9fa9b50>, bias_init=None, format=NCHW>
  (residual_bn1): BatchNorm2d<num_features=2, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn1.gamma, shape=(2,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn1.beta, shape=(2,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn1.moving_mean, shape=(2,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn1.moving_variance, shape=(2,), dtype=Float32, requires_grad=False)>
  (residual_conv2): Conv2d<input_channels=2, output_channels=2, kernel_size=(3, 3), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccfa6f6810>, bias_init=None, format=NCHW>
  (residual_bn2): BatchNorm2d<num_features=2, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn2.gamma, shape=(2,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn2.beta, shape=(2,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn2.moving_mean, shape=(2,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn2.moving_variance, shape=(2,), dtype=Float32, requires_grad=False)>
  (residual_conv3): Conv2d<input_channels=2, output_channels=10, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9f56cd0>, bias_init=None, format=NCHW>
  (residual_bn3): BatchNorm2d<num_features=10, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_bn3.gamma, shape=(10,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_bn3.beta, shape=(10,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_bn3.moving_mean, shape=(10,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_bn3.moving_variance, shape=(10,), dtype=Float32, requires_grad=False)>
  (residual_relu1): ReLU<>
  (residual_relu2): ReLU<>
  (residual_relu3): ReLU<>
  (residual_down_sample_layer): SequentialCell<
    (0): Conv2d<input_channels=4096, output_channels=10, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf9e6d3d0>, bias_init=None, format=NCHW>
    (1): BatchNorm2d<num_features=10, eps=0.0001, momentum=0.9, gamma=Parameter (name=residual_down_sample_layer.1.gamma, shape=(10,), dtype=Float32, requires_grad=True), beta=Parameter (name=residual_down_sample_layer.1.beta, shape=(10,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=residual_down_sample_layer.1.moving_mean, shape=(10,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=residual_down_sample_layer.1.moving_variance, shape=(10,), dtype=Float32, requires_grad=False)>
    >
  >
insert_layer_outshape not equal!: [2, 10]
mut_result:True
87 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: dropout2 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Conv2d<input_channels=4096, output_channels=4096, kernel_size=(1, 1), stride=(1, 1), pad_mode=same, padding=0, dilation=(1, 1), group=1, has_bias=False, weight_init=<mindspore.common.initializer.HeUniform object at 0x7fccf97d3d50>, bias_init=None, format=NCHW>
insert_layer_outshape equal!
mut_result:False
88 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: dropout2 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
select insert layer: Dense<input_channels=4096, output_channels=4096>
replace Basic with CM op!
mut_result:True
89 generation!

Adopt SM mut_strategy!
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: all
mutate input_shape: [2, 33, 17, 46, 1]
mutate output_shape: [2, 7, 27]
mut_result:True
90 generation!

Adopt SM mut_strategy!
select layer: conv5 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 384, 4, 4] out_shape: [2, 256, 4, 4]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: after
mutate output_shape: [2, 18, 37]
mut_result:True
91 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: bn1 layer_type: BatchNorm2d selected param:num_features input_shape:[2, 96, 8, 8] output_shape:[2, 96, 8, 8]
Edit value: 32 new_inshape: (2, 32, 8, 8) new_outshape: (2, 32, 8, 8)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): BatchNorm2d<num_features=32, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=bn1.1.gamma, shape=(32,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn1.1.beta, shape=(32,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn1.1.moving_mean, shape=(32,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn1.1.moving_variance, shape=(32,), dtype=Float32, requires_grad=False)>
  (2): Replace_ms<>
  >
mut_result:True
92 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: bn2 layer_type: BatchNorm2d selected param:num_features input_shape:[2, 256, 4, 4] output_shape:[2, 256, 4, 4]
Edit value: 128 new_inshape: (2, 128, 4, 4) new_outshape: (2, 128, 4, 4)
mutate op infor:
SequentialCell<
  (0): Replace_ms<>
  (1): BatchNorm2d<num_features=128, eps=1e-05, momentum=0.09999999999999998, gamma=Parameter (name=bn2.1.gamma, shape=(128,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn2.1.beta, shape=(128,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn2.1.moving_mean, shape=(128,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn2.1.moving_variance, shape=(128,), dtype=Float32, requires_grad=False)>
  (2): Replace_ms<>
  >
mut_result:True
93 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: bn1 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 96, 8, 8] output_shape:[2, 96, 8, 8]
Edit value: 0.04999999999999999 new_inshape: (2, 96, 8, 8) new_outshape: (2, 96, 8, 8)
BatchNorm2d<num_features=96, eps=1e-05, momentum=0.050000000000000044, gamma=Parameter (name=bn1.gamma, shape=(96,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn1.beta, shape=(96,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn1.moving_mean, shape=(96,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn1.moving_variance, shape=(96,), dtype=Float32, requires_grad=False)>
mut_result:True
94 generation!

Adopt LA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Softmax<>
insert_layer_outshape equal!
mut_result:True
95 generation!

Adopt SM mut_strategy!
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
candidate_in_mutlayers_indice:-1
mutate state: before
mutate input_shape: [2, 42, 7, 16, 47]
mut_result:True
96 generation!

Adopt RA mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: bn3 layer_type: <class 'mindspore.nn.layer.normalization.BatchNorm2d'> in_shape: [2, 256, 2, 2] out_shape: [2, 256, 2, 2]
mut Basic type: True
add Basic layer : Cascade_op
select insert layer: Inception_A<
  (branch0): BasicConv2d<
    (relu): ReLU<>
    >
  (branch1): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch2): SequentialCell<
    (0): BasicConv2d<
      (relu): ReLU<>
      >
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    (2): BasicConv2d<
      (relu): ReLU<>
      >
    >
  (branch_pool): SequentialCell<
    (0): AvgPool2d<kernel_size=3, stride=1, pad_mode=SAME>
    (1): BasicConv2d<
      (relu): ReLU<>
      >
    >
  >
insert_layer_outshape not equal!: [2, 256, 2, 2]
mut_result:True
97 generation!

Adopt PM mut_strategy!
candidate_in_mutlayers_indice:-1
select op: bn2 layer_type: BatchNorm2d selected param:momentum input_shape:[2, 256, 4, 4] output_shape:[2, 256, 4, 4]
Edit value: 0.024999999999999994 new_inshape: (2, 256, 4, 4) new_outshape: (2, 256, 4, 4)
BatchNorm2d<num_features=256, eps=1e-05, momentum=0.025000000000000022, gamma=Parameter (name=bn2.gamma, shape=(256,), dtype=Float32, requires_grad=True), beta=Parameter (name=bn2.beta, shape=(256,), dtype=Float32, requires_grad=True), moving_mean=Parameter (name=bn2.moving_mean, shape=(256,), dtype=Float32, requires_grad=False), moving_variance=Parameter (name=bn2.moving_variance, shape=(256,), dtype=Float32, requires_grad=False)>
mut_result:True
98 generation!

Adopt LC mut_strategy!
select layer: dropout1 layer_type: <class 'mindspore.nn.layer.basic.Dropout'> in_shape: [2, 4096] out_shape: [2, 4096]
mut Basic type: True
add Basic layer : Basic_op
select insert layer: Dropout<keep_prob=0.5>
insert_layer_outshape equal!
mut_result:True
99 generation!

Adopt CM mut_strategy!
candidate_in_mutlayers_indice:-1
select layer: conv3 layer_type: <class 'mindspore.nn.layer.conv.Conv2d'> in_shape: [2, 256, 4, 4] out_shape: [2, 384, 4, 4]
mut Basic type: True
select insert layer: AvgPool2d<kernel_size=1, stride=1, pad_mode=VALID>
replace Basic with CM op!
mut_result:True
100 generation!

mutation trace: {'1': [1], '2': [1, 2], '3': [1, 3], '4': [1, 4], '5': [5], '6': [1, 6], '7': [7], '8': [1, 8], '9': [9], '10': [9, 10], '11': [9, 11], '12': [1, 12], '13': [1, 13], '14': [14], '15': [14, 15], '16': [14, 16], '17': [17], '18': [14, 18], '19': [9, 19], '20': [14, 16, 20], '21': [14, 18, 21], '22': [14, 18, 22], '23': [14, 18, 23], '24': [14, 24], '25': [14, 18, 25], '26': [14, 16, 26], '27': [14, 27], '28': [14, 16, 26, 28], '29': [14, 16, 26, 29], '30': [14, 18, 30], '31': [14, 18, 31], '32': [14, 16, 26, 32], '33': [14, 16, 26, 32, 33], '34': [14, 16, 26, 32, 34], '35': [14, 16, 26, 35], '36': [14, 36], '37': [14, 16, 37], '38': [14, 16, 26, 32, 38], '39': [14, 16, 26, 39], '40': [14, 16, 40], '41': [14, 16, 26, 32, 41], '42': [14, 18, 42], '43': [1, 43], '44': [14, 16, 26, 32, 44], '45': [14, 36, 45], '46': [9, 46], '47': [14, 36, 47], '48': [14, 16, 26, 48], '49': [49], '50': [14, 16, 26, 50], '51': [9, 51], '52': [1, 52], '53': [53], '54': [1, 54], '55': [14, 18, 55], '56': [9, 56], '57': [14, 18, 57], '58': [14, 16, 26, 32, 58], '59': [14, 16, 26, 59], '60': [9, 60], '61': [14, 16, 26, 61], '62': [14, 36, 62], '63': [14, 18, 63], '64': [14, 16, 64], '65': [14, 65], '66': [14, 16, 66], '67': [14, 16, 67], '68': [14, 16, 26, 32, 68], '69': [14, 36, 69], '70': [1, 70], '71': [14, 16, 71], '72': [14, 36, 72], '73': [14, 36, 73], '74': [9, 74], '75': [14, 36, 75], '76': [14, 16, 26, 76], '77': [14, 16, 26, 32, 77], '78': [14, 18, 78], '79': [14, 18, 79], '80': [14, 80], '81': [14, 16, 26, 32, 81], '82': [14, 16, 26, 32, 82], '83': [14, 36, 83], '84': [1, 84], '85': [14, 16, 26, 32, 85], '86': [14, 36, 86], '87': [87], '88': [14, 16, 26, 88], '89': [14, 36, 89], '90': [14, 16, 26, 90], '91': [9, 91], '92': [14, 92], '93': [14, 16, 26, 93], '94': [94], '95': [9, 95], '96': [14, 16, 26, 96], '97': [14, 16, 97], '98': [14, 36, 98], '99': [14, 18, 99], '100': [14, 16, 26, 32, 100]}
